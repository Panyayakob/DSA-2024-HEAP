{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyP8oBaCPjLphWejtWCM/crA"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import heapq\n","\n","class MaxHeap:\n","    def __init__(self):\n","        self.heap = []\n","\n","    def push(self, value):\n","        heapq.heappush(self.heap, -value)  # ใช้ค่าลบเพื่อจำลอง Max Heap\n","\n","    def pop(self):\n","        return -heapq.heappop(self.heap)\n","\n","    def peek(self):\n","        return -self.heap[0] if self.heap else None\n","\n","    def get_heap(self):\n","        return sorted([-x for x in self.heap], reverse=True)  # แสดงค่าตามลำดับ Max Heap\n","\n","# ค่าที่จะเพิ่มลงใน Max Heap\n","elements = [5, 3, 8, 1, 2, 7, 6, 4]\n","\n","# สร้าง Max Heap\n","max_heap = MaxHeap()\n","for element in elements:\n","    max_heap.push(element)\n","\n","# แสดงค่า Max Heap ที่ได้\n","print(\"Max Heap:\", max_heap.get_heap())"],"metadata":{"id":"1tlQaZfOLXTi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1738676294670,"user_tz":-420,"elapsed":1844,"user":{"displayName":"6109 Panya Yakob","userId":"13315408186292365671"}},"outputId":"75f0b65d-e1a7-405d-d097-432f35f1403c"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Max Heap: [8, 7, 6, 5, 4, 3, 2, 1]\n"]}]}]}